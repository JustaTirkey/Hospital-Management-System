/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospital_management;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;
import static javax.swing.UIManager.getInt;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tirke
 */
public class PatientsMedicine extends javax.swing.JFrame {

    /**
     * Creates new form PatientsMedicine
     */
    public PatientsMedicine() {
        initComponents();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        save = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        quty = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Select Medicine");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno.", "Medicine Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        save.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Quantity");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("PHARMACEUTICAL STORE");

        quty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qutyKeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Date");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Enter Patient ID");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        date.setEditable(false);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CROCINE", "ASPIRIN", "NAMOSLATE", "GLUCOSE", "TARIVID", "CANESTEN", "DICLOFENAC", "ANTACIDS", "VERMOX", "OVEX", "OMEE", "AVIL", "HIDRASEC", "UTINOR", "PARIET", "CIPROXIN", "CYPROSTAT", "ANDROCUR", "DESTOLIT", "URSOFALK", "ORS", "URSOGAL", "OMNI GEL", "DETTOL", "BETADINE", "LIVER-52", "METHYLPHENIDATE", "BETA-BLOCKER", "BENZODIAZEPINES", "Z-DRUG", "ANTIPSYCHOTIC", "SSRI-ANTIDEPRESSANT", "MAOI-DRUG", "BICASUL", "NASAL DECONGESTANTS", "EXPECTORANTS", "COUGH SUPRESSANTS", "ANTI HISTAMINES", "ACETAMINOPHEN", "HPV VACCINE", "SYRINGE", "INJECTION", "MORFIN", "ORLISTAT", "ZALASTA", "ZANTAC", "ZEFFIX", "ZINNAT", "ZOFRAN", "ZOCOR" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox1, 0, 126, Short.MAX_VALUE))
                        .addGap(254, 254, 254)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(quty)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)
                        .addGap(185, 185, 185)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(save)
                        .addGap(220, 220, 220)
                        .addComponent(jButton3)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(quty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
            DateFormat df = new SimpleDateFormat("yyyy/MM/dd.hh:mm:ss");
            Date da = new Date();
            String a = df.format(da);
            date.setText("" + a);
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hm_db", "root", "myOracle9@ju");
            Statement stmt = conn.createStatement();
            String query;
            String pi = jTextField1.getText();
            if (pi.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter a valid Patient ID");
                return;
            }
            int pid = Integer.parseInt(pi);
            query = "Select pid from patient where pid=" + pid + ";";
            ResultSet rs = stmt.executeQuery(query);
            System.out.println(""+ query);
            if (rs.next() == false) {
                JOptionPane.showMessageDialog(null, "Patient ID not Registered");
            }
            else{
//            else {
//                DefaultTableModel model = (DefaultTableModel) table.getModel();
//                for(int i=0;i<model.getRowCount();i++)
//                {
//                    String query1;
//                    query1="Select tid from test where tname=\""+model.getValueAt(i, 1)+"\";";
//                    System.out.println(""+query1);
//                    ResultSet rs5=stmt.executeQuery(query1);
//                    System.out.println(""+query1);
//                    rs5.next();
//                    query="insert into hadtest values("+pid+","+rs5.getInt(1)+",CURRENT_TIMESTAMP);";
//                    System.out.println(""+query);
//                    stmt.executeUpdate(query);
//                    rs5.close();
//
//                }
//                JOptionPane.showMessageDialog(null,"Medicine are confirmed!");
//            }
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                System.out.println("Hello there "+model.getValueAt(i, 1));
//                String medicineName = (String) model.getValueAt(i, 1);
//                System.out.println("Hello there "+medicineName);           
//                PreparedStatement pstmt = conn.prepareStatement("SELECT mid FROM medicine WHERE mname=?;");
                String query1;
                query1="Select mid from medicine where mname=\""+model.getValueAt(i, 1)+"\";";
                System.out.println(""+query1);
                ResultSet rs5=stmt.executeQuery(query1);
                System.out.println(""+query1);
                //                rs5.next();
                
                int quantity =Integer.parseInt(quty.getText()); 
                if (rs5.next()){
                    int mid = rs5.getInt(1);
                    System.out.println("mid: " + mid);
                    query = "insert into had_medicine values("+pid+","+mid+",CURRENT_TIMESTAMP"+","+quantity+");";
                     System.out.println(""+query);
                     stmt.executeUpdate(query);
                     rs5.close();
                }                
//                pstmt.setString(1, medicineName);
//                ResultSet rsMedicine = pstmt.executeQuery();
//                System.out.println(""+ query);
//                
//                if (rsMedicine.next()) {
//                    int mid = rsMedicine.getInt(1);
//                    pstmt.close();
//                
//                    query = "INSERT INTO had_medicine VALUES (?, ?, CURRENT_TIMESTAMP, ?);";
//                    PreparedStatement pstmtInsert = conn.prepareStatement(query);
//                    pstmtInsert.setInt(1, pid);
//                    pstmtInsert.setInt(2, mid);
//                    pstmtInsert.setInt(3, quantity);
//                    pstmtInsert.executeUpdate();
//                    pstmtInsert.close();
//                    System.out.println(""+ query);
//                }
            }
            } 
            JOptionPane.showMessageDialog(null,"Medicines are confirmed!");
            stmt.close();
            conn.close();
        
            sno = 1;
            Arrays.fill(as, 0);
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid quantity format");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error in connectivity" + e.getMessage());
    }
    jButton3.doClick();
    }//GEN-LAST:event_saveActionPerformed

    private void qutyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qutyKeyReleased
        char ch = evt.getKeyChar();
        System.out.println("Hello Reached ");
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        if (ch != '\n') {
            System.out.println("" + ch);
            String pi = jTextField1.getText();
            if (pi.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter Patient ID");
            } else {
                String str = jComboBox1.getSelectedItem().toString();
                int i = jComboBox1.getSelectedIndex();
                int qty = Integer.parseInt(quty.getText());
                if(qty!=0){
                    if (as[i] == 0){
                        as[i] += qty;
                        model.addRow(new Object[]{"" + sno, str, "" + as[i]});
                        sno++;
                    } else {
                        as[i] += qty;
                        for (int j = 0; j < model.getRowCount(); j++) {
                            if (model.getValueAt(j, 1).equals(str)) {
                                model.setValueAt(as[i], j, 2);
                            }
                        }
                    }

                }
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_qutyKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new MainPage().setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText(null);
        quty.setText("0");
        jComboBox1.setSelectedIndex(0);
        Arrays.fill(as,0);
        DefaultTableModel model=(DefaultTableModel) table.getModel();
        for(int i=model.getRowCount()-1;i>=0;i--)
        {
            model.removeRow(i);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        char ch = evt.getKeyChar();
        if (ch == '\n') {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hm_db", "root", "myOracle9@ju");
                Statement stmt = conn.createStatement();
                String query;
                String pi = jTextField1.getText();
                if (pi.equals("")) {
                    JOptionPane.showMessageDialog(null, "Enter a valid Patient ID");
                }
                int pid = Integer.parseInt(pi);
                query = "Select pid from patient where pid=" + pid + ";";
                ResultSet rs = stmt.executeQuery(query);
                if (rs.next() == false) {
                    JOptionPane.showMessageDialog(null, "Patient ID not Registered");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error in connectivity"+ e.getMessage());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        DateFormat dx = new SimpleDateFormat("yyyy/MM/dd");
        Date da = new Date();
        String a = dx.format(da);
        date.setText("" + a);
        quty.setText("0");
        sno = 1;
        Arrays.fill(as, 0);

// TODO add your handling code here:
    } 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientsMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientsMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientsMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientsMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientsMedicine().setVisible(true);
            }
        });
    }
    
    int sno = 1;
    int as[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField quty;
    private javax.swing.JButton save;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
